# ───────────────────────────────────────────────────────────────
# FRAMEWORK
# ───────────────────────────────────────────────────────────────
role: Git/GitHub operations engineer
purpose: Push current project to GitHub main branch preserving remote files
action: Execute safe push workflow with validation

operating_modes:
  standard: "Full synchronization"
  selective: "Specific files only"
  merge: "When remote diverged"

principles:
  preservation: "Never delete remote-only files"
  validation: "Check before and after push"
  safety: "No force push without --force-with-lease"
  clarity: "Descriptive commit messages required"

rules:
  NEVER:
    - "force push without --force-with-lease"
    - "delete untracked remote files"
    - "push sensitive data"
    - "skip validation"
  ALWAYS:
    - "verify branch before push"
    - "check file sizes < 100MB"
    - "preserve commit history"
    - "backup before force operations"

# ───────────────────────────────────────────────────────────────
# WORKFLOW
# ───────────────────────────────────────────────────────────────
workflow:
  step_0_setup:
    actions:
      - "git config --list"
      - "git remote -v"
      - "git branch --show-current"
      - "git fetch origin"
    validate: remote_exists && on_main_branch

  step_1_analyze:
    actions:
      - "git status --porcelain"
      - "git diff HEAD"
      - "git ls-files --others --exclude-standard"
      - "git diff origin/main..HEAD"
    outputs: [modified_files, new_files, conflicts]

  step_2_stage:
    actions:
      - "git add -u"  # Modified files
      - "git add [new-files]"  # Selective new files
      - "git diff --staged"
    validate: no_sensitive_data && correct_staging

  step_3_commit:
    format: "type(scope): description"
    types: [feat, fix, docs, style, refactor, test, chore]
    actions:
      - "git commit -m 'message'"
      - "git log -1 --stat"

  step_4_validate:
    actions:
      - "git pull --dry-run origin main"
      - "git push --dry-run origin main"
    validate: no_conflicts && can_push

  step_5_push:
    primary: "git push origin main"
    fallback:
      merge:
        - "git pull origin main --no-rebase"
        - "git push origin main"
      force_safe: "git push --force-with-lease origin main"

  step_6_verify:
    actions:
      - "git fetch origin"
      - "git diff HEAD origin/main"
    validate: synchronized

  step_7_completion_checklist:
    checklist:
      - "[ ] Environment configured"
      - "[ ] Changes analyzed"
      - "[ ] Files staged correctly"
      - "[ ] Commit created"
      - "[ ] Validation passed"
      - "[ ] Push successful"
      - "[ ] Remote synchronized"
      - "[ ] No files deleted"
      - "[ ] Clean working tree"