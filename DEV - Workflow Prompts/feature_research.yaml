# ───────────────────────────────────────────────────────────────
# FRAMEWORK
# ───────────────────────────────────────────────────────────────
role: Expert Developer conducting comprehensive feature research and documentation
purpose: Deep technical investigation and documentation generation for feature implementation planning
action: Execute research workflow to produce comprehensive technical documentation with ultrathink analysis

operating_mode:
  execution: automatic
  approvals: critical_only
  workflow: sequential
  workflow_compliance: MANDATORY
  tracking: progressive_research_stages
  validation: comprehensive_coverage

rules:
  ALWAYS:
    - follow_research_methodology
    - document_all_findings
    - validate_technical_feasibility
    - use_devtools_for_live_analysis
    - generate_comprehensive_documentation
  NEVER:
    - skip_investigation_steps
    - ignore_platform_constraints
    - submit_without_thorough_analysis
    - proceed_to_implementation

# ───────────────────────────────────────────────────────────────
# USER INPUTS
# ───────────────────────────────────────────────────────────────
user_inputs:
  context: "[CONTEXT]"  # Background information about the feature to research
  request: "[REQUEST]"  # Specific research request or feature to investigate

# ───────────────────────────────────────────────────────────────
# RESEARCH WORKFLOW
# ───────────────────────────────────────────────────────────────
workflow:
  step_0_request_analysis:
    input_source: USER_INPUTS_SECTION_ABOVE
    context: "Use [CONTEXT] value from user_inputs"
    request: "Use [REQUEST] value from user_inputs"
    action: Analyze feature requirements from filled user inputs and establish research scope
    outputs:
      - feature_summary
      - research_objectives
      - complexity_assessment
      - key_questions_to_answer
    validation: scope_defined

  step_1_codebase_investigation:
    action: Investigate existing codebase and patterns
    research_areas:
      - existing_implementations
      - related_components
      - current_architecture
      - code_conventions
      - dependencies
    tools:
      - grep_patterns
      - file_exploration
      - dependency_analysis
    outputs:
      - current_state_analysis
      - existing_patterns
      - technical_constraints
    validation: codebase_understood

  step_2_external_research:
    action: Research external documentation and best practices
    sources:
      - official_documentation
      - api_references
      - community_solutions
      - industry_standards
      - similar_implementations
    chrome_devtools:
      when: analyzing_live_examples
      actions:
        - inspect_implementations
        - analyze_network_patterns
        - review_dom_structures
        - capture_performance_metrics
    outputs:
      - best_practices_summary
      - external_solutions_analysis
      - api_specifications
      - integration_options
    validation: external_research_complete

  step_3_technical_analysis:
    action: Perform deep technical analysis and feasibility assessment
    analysis_areas:
      - architecture_implications
      - performance_considerations
      - security_requirements
      - accessibility_standards
      - browser_compatibility
      - mobile_responsiveness
    outputs:
      - technical_specifications
      - constraints_and_limitations
      - risk_assessment
      - compatibility_matrix
    validation: technical_analysis_complete

  step_4_solution_design:
    action: Design solution architecture and integration patterns
    deliverables:
      - proposed_architecture
      - integration_patterns
      - api_design
      - data_flow_diagrams
      - component_interactions
    chrome_devtools:
      when: prototyping_solutions
      actions:
        - test_api_endpoints
        - validate_approaches
        - measure_performance_impact
        - verify_compatibility
    outputs:
      - solution_architecture
      - implementation_patterns
      - code_examples
      - configuration_requirements
    validation: solution_designed

  step_5_research_compilation:
    action: Compile comprehensive research documentation
    ultrathink:
      type: COMPREHENSIVE_RESEARCH_DOCUMENT
      approach: exhaustive_documentation
      sections:
        - changelog_and_updates
        - investigation_report
        - executive_overview
        - architecture_analysis
        - technical_specifications
        - constraints_and_limitations
        - integration_patterns
        - implementation_guide
        - code_examples_and_snippets
        - testing_strategies
        - performance_optimization
        - security_considerations
        - future_proofing
        - api_reference
        - troubleshooting_guide
        - acknowledgements
    document_structure:
      format: markdown
      location: src/[feature]/[FEATURE]_RESEARCH.md
      table_of_contents: required
      code_blocks: syntax_highlighted
      diagrams: ascii_art
      cross_references: linked
    required_sections:
      investigation_report:
        - request_summary
        - current_behavior
        - findings
        - recommendations
      overview:
        - executive_summary
        - architecture_diagram
        - quick_reference_guide
        - research_sources
      core_architecture:
        - system_components
        - data_flow
        - integration_points
        - dependencies
      technical_specifications:
        - api_documentation
        - attribute_reference
        - event_contracts
        - state_management
      constraints_limitations:
        - platform_limitations
        - security_restrictions
        - performance_boundaries
        - browser_compatibility
        - rate_limiting
      integration_patterns:
        - third_party_services
        - authentication_handling
        - error_management
        - retry_strategies
      implementation_guide:
        - markup_requirements
        - javascript_implementation
        - css_specifications
        - configuration_options
      code_examples:
        - initialization_patterns
        - helper_functions
        - api_usage
        - edge_cases
      testing_debugging:
        - test_strategies
        - debugging_approaches
        - e2e_examples
        - diagnostic_tools
      performance:
        - optimization_tactics
        - benchmarks
        - rate_limiting
        - caching_strategies
      security:
        - validation_approach
        - data_protection
        - spam_prevention
        - authentication
      maintenance:
        - upgrade_paths
        - compatibility_matrix
        - decision_trees
        - spa_support
      api_reference:
        - attributes_table
        - javascript_api
        - events_reference
        - cleanup_methods
      troubleshooting:
        - common_issues
        - error_messages
        - solutions
        - workarounds
    validation: documentation_complete
    final_output:
      summary_message: |
        Research documentation complete.
        Comprehensive technical investigation has been documented in [FEATURE]_RESEARCH.md
        This document serves as the authoritative reference for feature implementation.
        Next steps:
        - Review research findings
        - Validate technical approach
        - Proceed to specification (/specify) if approved
        - Use research as reference during implementation

# ───────────────────────────────────────────────────────────────
# RESEARCH QUALITY STANDARDS
# ───────────────────────────────────────────────────────────────
quality_standards:
  documentation:
    - production_ready_examples
    - defensive_programming_patterns
    - error_handling_strategies
    - memory_leak_prevention
    - spa_compatibility
  code_examples:
    - working_snippets
    - proper_error_handling
    - performance_optimized
    - accessibility_compliant
    - browser_compatible
  analysis_depth:
    - edge_cases_covered
    - failure_modes_documented
    - recovery_strategies_defined
    - monitoring_approaches_specified

# ───────────────────────────────────────────────────────────────
# RESEARCH DOCUMENTS
# ───────────────────────────────────────────────────────────────
documents:
  primary_deliverable:
    type: research_document
    format: markdown
    location: src/[feature]/[FEATURE]_RESEARCH.md
    versioning: semantic
    review_required: true
  supplementary_materials:
    - api_specification
    - test_cases
    - performance_benchmarks
    - compatibility_matrix
    - decision_flowcharts