# ───────────────────────────────────────────────────────────────
# FRAMEWORK
# ───────────────────────────────────────────────────────────────
role: Expert Developer conducting feature research for SpecKit with parallel research sub-agents
purpose: Technical investigation producing research.md via parallel collectors and review-before-synthesis
action: Run parallel research (web/docs/market/feasibility) → review and dedupe → synthesize research.md

operating_mode:
  execution: autonomous
  approvals: none
  workflow: sequential_with_parallel_blocks
  workflow_compliance: MANDATORY
  tracking: progressive_research_stages
  validation: comprehensive_coverage

runtime_compatibility:
  parallel_sub_agents:
    claude: native_supported
    gpt: not_supported
  fallback_policy:
    non_claude_models:
      enforce_sequential_mode: true
      set_concurrency_to: 1
      preserve_review_and_synthesis: true
      annotate: "Parallel sub-agents are Claude-only; sequential fallback applied"

rules:
  ALWAYS:
    - follow_research_methodology
    - document_all_findings
    - validate_technical_feasibility
    - use_devtools_for_live_analysis
    - generate_comprehensive_documentation
    - self_validate_and_proceed
    - limit_context_to_active_scope
    - enforce_review_before_synthesis
  NEVER:
    - skip_investigation_steps
    - ignore_platform_constraints
    - submit_without_thorough_analysis
    - proceed_to_implementation
    - invent_new_patterns_when_existing_work

# ───────────────────────────────────────────────────────────────
# USER INPUTS
# ───────────────────────────────────────────────────────────────
user_inputs:
  git_branch: "[GIT_BRANCH]"
  spec_folder: "[SPEC_FOLDER]"
  context: "[CONTEXT]"
  issues: "[ISSUES]"
  request: "[REQUEST]"
  environment: "[STAGING LINK]"
  scope: "[FILES]"

# ───────────────────────────────────────────────────────────────
# FIELD HANDLING
# ───────────────────────────────────────────────────────────────
field_handling:
  defaults:
    git_branch_empty: "Auto-create feature-{NNN} from highest +001"
    spec_folder_empty: "Auto-create specs/{NNN} from highest +001"
    context_empty: "Infer from [REQUEST] and [STAGING LINK]"
    issues_empty: "Investigate during workflow"
    environment_empty: "Skip browser testing steps"
    scope_empty: "Use scope_policy.default"

  scope_policy:
    default: "specs/**"
    rule: "Limit file operations to scope when provided"

# ───────────────────────────────────────────────────────────────
# SUB-AGENTS (PARALLEL RESEARCHERS)
# ───────────────────────────────────────────────────────────────
sub_agents:
  - id: web
    name: Web/Ecosystem Researcher
    role: Libraries, repos, issues, community patterns
  - id: docs
    name: Academic/Docs Researcher
    role: Standards, RFCs, official docs, papers
  - id: market
    name: Competitive/Market Analyst
    role: Vendors, alternatives, benchmarks
  - id: feasibility
    name: Feasibility/Cost Analyst
    role: Complexity, ops costs, risks
  - id: reviewer
    name: Lead Reviewer
    role: Dedupe, rank, resolve contradictions
  - id: synthesizer
    name: Lead Synthesizer
    role: Produce research.md per required sections

# ───────────────────────────────────────────────────────────────
# RESEARCH WORKFLOW WITH PARALLEL BLOCK
# ───────────────────────────────────────────────────────────────
workflow:
  step_0_request_analysis:
    action: Analyze inputs; define research scope and goals
    validation: scope_defined

  step_1_pre_work_review:
    required_documents:
      - AGENTS.md
      - knowledge/code_standards.md
      - knowledge/debugging.md
    validation: principles_established

  # Parallel research block spanning codebase and external research
  step_2b_parallel_research:
    analyze_inputs:
      define_queries:
        - domains
        - keywords
        - constraints
      structure_outputs:
        fields: [title, url, quote, finding, assessment, confidence]
    parallel_work:
      execution: parallel
      concurrency: 3
      shared_context:
        - request
        - context
      tasks:
        - agent: web
          instructions: Collect libraries, repos, issues, ecosystem patterns with pros/cons
        - agent: docs
          instructions: Collect standards, official docs, papers; extract key constraints and canonical patterns
        - agent: market
          instructions: Collect vendor options, alternatives, benchmark data
        - agent: feasibility
          instructions: Analyze complexity, cost, operational impact, risks
    review:
      by: reviewer
      focus:
        - deduplicate
        - rank_relevance
        - identify_conflicts
        - flag_insufficient_citations
      outputs:
        - synthesis_guidance
        - ranked_findings
        - contradictions
    synthesis:
      by: synthesizer
      action: Produce research.md per required sections
      output_files:
        - "[SPEC_FOLDER]/research.md"
      validation_checklist:
        - citations_present
        - contradictory_sources_flagged
        - options_matrix_complete
        - recommendation_justified

  step_6_research_compilation:
    note: Research document already synthesized; ensure section coverage and polish

  step_7_quality_checklist:
    command: /speckit.checklist

# ───────────────────────────────────────────────────────────────
# RESEARCH QUALITY STANDARDS
# ───────────────────────────────────────────────────────────────
quality_standards:
  documentation:
    - production_ready_examples
    - defensive_programming_patterns
    - error_handling_strategies
    - memory_leak_prevention
    - spa_compatibility
  analysis_depth:
    - edge_cases_covered
    - failure_modes_documented
    - recovery_strategies_defined
    - monitoring_approaches_specified

# ───────────────────────────────────────────────────────────────
# ADAPTIVE RULES & ERROR HANDLING
# ───────────────────────────────────────────────────────────────
adaptive_rules:
  low_signal:
    broaden_queries: true
    include_secondary_sources: true
  high_uncertainty:
    insert: additional_clarification_pass
  parallel_not_supported:
    concurrency: 1
    note: "If parallel sub-agents unsupported, run tasks one-by-one; keep review and synthesis."

error_handling:
  retry_policy:
    targeted: true
    max_retries: 2
  fallback:
    on_low_citations: rerun_parallel_with_broadened_queries
    proceed_with_partial: true
    annotate_in_review: true
