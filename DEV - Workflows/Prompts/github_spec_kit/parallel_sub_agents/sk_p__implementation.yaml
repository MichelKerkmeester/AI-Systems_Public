# ─────────────────────────────────────────────────────────────────
# FRAMEWORK
# ─────────────────────────────────────────────────────────────────
role: Expert Developer using GitHub SpecKit for autonomous implementation with parallel sub-agents
purpose: Spec-driven implementation with parallel preparation (core, integrations, tests, docs), then development with checkpoints
action: Run preparatory parallel block → review → synthesis into implementation_plan.md → proceed autonomously

operating_mode:
  workflow: sequential_with_parallel_blocks
  workflow_compliance: MANDATORY
  workflow_execution: autonomous
  approvals: none
  tracking: progressive_task_checklists
  validation: checkpoint_verification

# ─────────────────────────────────────────────────────────────────
# USER INPUTS
# ─────────────────────────────────────────────────────────────────
user_inputs:
  git_branch: "[GIT_BRANCH]"
  spec_folder: "[SPEC_FOLDER]"
  context: "[CONTEXT]"
  issues: "[ISSUES]"
  request: "[REQUEST]"
  environment: "[STAGING LINK]"
  scope: "[FILES]"

# ─────────────────────────────────────────────────────────────────
# REQUEST HANDLING
# ─────────────────────────────────────────────────────────────────
request_handling:
  default: "Conduct a comprehensive review of the spec folder and carry out its implementation fully autonomously."
  override: "Use [REQUEST] if provided (replaces default), else use default above"

# ─────────────────────────────────────────────────────────────────
# FIELD HANDLING
# ─────────────────────────────────────────────────────────────────
field_handling:
  defaults:
    git_branch_empty: "Auto-create feature-{NNN} from highest +001"
    spec_folder_empty: "Auto-create specs/{NNN} from highest +001"
    context_empty: "Infer from [REQUEST] and [STAGING LINK]"
    issues_empty: "Investigate during workflow"
    environment_empty: "Skip browser testing steps"
    scope_empty: "Use scope_policy.default"

  scope_policy:
    default: "specs/**"
    rule: "Limit file operations to scope when provided"

# ─────────────────────────────────────────────────────────────────
# SUB-AGENTS (PARALLEL PREP)
# ─────────────────────────────────────────────────────────────────
sub_agents:
  - id: core
    name: Core Implementer
    role: Draft core logic plan, modules, data structures, key algorithms
    focus: business_logic_data_structures_algorithms_core_modules
  - id: adapters
    name: Integrations/Adapters Engineer
    role: Identify external integrations, API surfaces, configuration, error handling
    focus: external_integrations_apis_configuration_error_handling
  - id: tests
    name: Test Engineer
    role: Create test plan (unit/integration), fixtures, coverage targets
    focus: unit_integration_fixtures_coverage_test_strategies
  - id: docs
    name: Docs Engineer
    role: Draft usage notes, examples, migration/upgrade notes
    focus: usage_guides_examples_migration_api_documentation
  - id: reviewer
    name: Integration Reviewer
    role: Validate coherence, API consistency, testability, identify gaps
    focus: coherence_consistency_testability_gap_identification
  - id: synthesizer
    name: Lead Synthesizer
    role: Produce implementation_plan.md to guide development
    focus: implementation_strategy_task_ordering_dependency_mapping

# ─────────────────────────────────────────────────────────────────
# WORKFLOW (PARALLEL OUTPUT QA BY MAIN AGENT)
# ─────────────────────────────────────────────────────────────────
workflow:
  step_8_review_plan_and_spec:
    action: Review spec and planning artifacts
    required_documents:
      - "[SPEC_FOLDER]/spec.md"
      - "[SPEC_FOLDER]/plan.md"
      - "[SPEC_FOLDER]/planning-summary.md"
    validation: planning_artifacts_understood

  step_9_task_breakdown:
    command: /tasks
    outputs:
      - tasks/checklist.md
      - task_duration: 15_to_60_minutes
      - tracking_structure: established
    validation: tasks_actionable

  step_10_analysis:
    command: /analyze
    outputs:
      - consistency_report
      - coverage_verification
      - alignment_check
      - gap_analysis
    validation: consistency_verified

  step_11_quality_checklist:
    command: /speckit.checklist
    outputs:
      - quality_checklist: generated
    validation: checklist_generated

  step_12_parallel_implementation_preparation:
    description: Parallel preparation for core, integrations, tests, and docs
    analyze_inputs:
      summarize:
        - key_requirements
        - constraints
        - unknowns
      shard_plan:
        - core
        - adapters
        - tests
        - docs
    parallel_work:
      execution: parallel
      concurrency: 3
      shared_context:
        - "[SPEC_FOLDER]/spec.md"
        - "[SPEC_FOLDER]/plan.md"
        - "tasks/checklist.md"
        - "consistency_report"
      tasks:
        - agent: core
          instructions: Draft module breakdown, key data structures, and algorithmic approach with rationale
          expected_output:
            type: markdown
            sections: [modules, data_structures, algorithms, rationale]
        - agent: adapters
          instructions: Enumerate integration points, API contracts, error-handling, and configuration matrix
          expected_output:
            type: markdown
            sections: [integrations, api_contracts, error_handling, configuration]
        - agent: tests
          instructions: Define test plan with key test cases, fixtures, and coverage goals
          expected_output:
            type: markdown
            sections: [test_plan, key_cases, fixtures, coverage_targets]
        - agent: docs
          instructions: "Draft developer-facing docs: usage patterns, examples, migration notes"
          expected_output:
            type: markdown
            sections: [usage, examples, migration_upgrade]
    review:
      by: reviewer
      focus:
        - coherence_across_tracks
        - api_consistency
        - testability
        - identify_gaps
      outputs:
        - synthesis_guidance
        - review_notes
    synthesis:
      by: synthesizer
      action: Produce implementation_plan.md combining parallel outputs + review guidance
      output_files:
        - "[SPEC_FOLDER]/implementation_plan.md"
      validation_checklist:
        - modules_and_integrations_aligned
        - tests_cover_critical_paths
        - docs_reflect_actual_interfaces
        - risks_and_open_questions_listed
    main_agent_finalization:
      by: MAIN_AGENT
      action: QA review and finalization of "[SPEC_FOLDER]/implementation_plan.md"
      checks:
        - confirm_alignment_with_request_and_context
        - validate_completeness_and_consistency
        - ensure_output_format_and_sections_present
        - resolve_remaining_open_questions_or_note_them
      outputs:
        - main_agent_review_notes
        - final_signoff: true

  step_13_implementation_check:
    command: /implement [task-id]
    checks:
      prerequisites: verified
      blockers: none
      environment: ready
    chrome_devtools:
      when: validating_environment
      verify:
        - api_endpoints_accessible
        - authentication_working
        - dependencies_loaded
    deep_analysis:
      focus: pre_implementation_verification
      approach: environment_validation
      outputs:
        - environment_status
        - dependency_verification
        - blocker_identification
        - readiness_confirmation

  step_14_development:
    approach: autonomous_implementation_with_checkpoints
    requirements:
      - follow: knowledge/code_standards.md
      - update: task_checklist_progressively
      - test: before_commit
      - no_premature_optimization
    checkpoints:
      major_changes:
        action: log_progress
      issues_found:
        action: document_resolution
      architecture_change:
        action: note_deviation
    chrome_devtools:
      when: debugging_implementation
      actions:
        - test_in_browser
        - verify_network_calls
        - check_console_output
        - validate_dom_changes
        - measure_performance_impact
    deep_analysis:
      focus: iterative_problem_solving
      approach: continuous_validation
      outputs:
        - implementation_decisions
        - debugging_insights
        - optimization_opportunities
        - test_coverage_gaps

  step_15_completion:
    summary_document:
      location: "[SPEC_FOLDER]/implementation-summary.md"
      required_sections:
        - feature_branch_name
        - files_modified_created
        - verification_steps_taken
        - deviations_from_plan
        - knowledge_base_updates
        - recommended_next_steps
        - browser_testing_results
    final_checklist:
      - update_task_status: completed
      - validation_passed: confirmed
      - summary_created: true
      - staging_verified: true
    deep_analysis:
      focus: comprehensive_completion_review
      approach: retrospective_analysis
      outputs:
        - implementation_quality_assessment
        - lessons_learned
        - technical_debt_noted
        - future_improvements

# ─────────────────────────────────────────────────────────────────
# WORKFLOW CONTINUATION
# ─────────────────────────────────────────────────────────────────
prerequisites:
  required_artifacts:
    - "[SPEC_FOLDER]/spec.md"
    - "[SPEC_FOLDER]/plan.md"
    - "[SPEC_FOLDER]/planning-summary.md"
  verification: MUST EXIST BEFORE PROCEEDING
  note: This workflow assumes steps 1-7 completed via speckit_plan_and_spec.yaml
  user_context: "[CONTEXT]"
  user_request: "[REQUEST]"

termination:
  after_step: 9
  message: "Implementation phase completed successfully. Workflow terminated after step 9 as requested."
  next_steps:
    - Review implementation-summary.md
    - Verify all changes in staging environment
    - Prepare for code review and PR submission
    - Update knowledge base if needed

# ─────────────────────────────────────────────────────────────────
# ADAPTIVE RULES & ERROR HANDLING
# ─────────────────────────────────────────────────────────────────
adaptive_rules:
  high_complexity:
    review_depth: exhaustive
    concurrency: 2
  high_uncertainty:
    insert: discovery_microstep_prior_to_parallel
  parallel_not_supported:
    concurrency: 1
    note: "If parallel sub-agents unsupported, run tasks one-by-one; keep review and synthesis."

error_handling:
  retry_policy:
    targeted: true
    max_retries: 2
  fallback:
    on_repeated_failure: rerun_failed_tasks_sequentially
    proceed_with_partial: true
    annotate_in_review: true

# ─────────────────────────────────────────────────────────────────
# RULES
# ─────────────────────────────────────────────────────────────────
rules:
  ALWAYS:
  - follow_workflow_sequence
  - document_all_changes
  - validate_before_completion
  - use_devtools_for_staging_analysis
  - update_task_checklist_progressively
  - self_validate_and_proceed
  - enforce_review_before_synthesis
  - apply_minimum_needed_change
  NEVER:
  - skip_workflow_steps
  - ignore_blockers
  - submit_without_validation
  - skip_browser_testing